apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: meeting-intelligence-backend
  annotations:
    run.googleapis.com/launch-stage: BETA
spec:
  template:
    metadata:
      annotations:
        # Resource configuration
        run.googleapis.com/cpu: '2'
        run.googleapis.com/memory: '2Gi'
        run.googleapis.com/execution-environment: gen2
        # Scaling configuration
        autoscaling.knative.dev/minScale: '0'
        autoscaling.knative.dev/maxScale: '10'
        # Timeout configuration (5 minutes for video processing)
        run.googleapis.com/timeout: '300s'
    spec:
      serviceAccountName: PROJECT_NUMBER-compute@developer.gserviceaccount.com
      containers:
      - name: meeting-intelligence-backend
        image: REGION-docker.pkg.dev/PROJECT_ID/meeting-intelligence/python-backend:latest
        ports:
        - name: http1
          containerPort: 8080
        env:
        # Port (Cloud Run requirement)
        - name: PORT
          value: '8080'
        # Supabase Configuration (from Secret Manager)
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: supabase-url
              key: latest
        - name: SUPABASE_SERVICE_ROLE_KEY
          valueFrom:
            secretKeyRef:
              name: supabase-service-role-key
              key: latest
        # AI Provider Configuration (from Secret Manager)
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: gemini-api-key
              key: latest
        - name: AI_PROVIDER
          value: 'gemini'
        # CORS Configuration
        - name: CORS_ORIGINS
          value: 'https://yourdomain.com,http://localhost:3000'
        resources:
          limits:
            cpu: '2'
            memory: 2Gi
        # Liveness probe
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        # Startup probe
        startupProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 30
  traffic:
  - percent: 100
    latestRevision: true
