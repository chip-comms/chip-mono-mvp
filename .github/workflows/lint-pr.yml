name: Lint and Format Check

on:
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'
      - 'supabase-backend/**'
      - 'python-backend/**'
      - '.github/workflows/lint-pr.yml'

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            supabase-backend/package-lock.json
      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **/*.ts
            **/*.tsx
            **/*.js
            **/*.jsx
            **/*.py
      
      - name: Install frontend dependencies
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: ./frontend
        run: npm ci
      
      - name: Install backend dependencies
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: ./supabase-backend
        run: npm ci
      
      - name: Install prettier
        if: steps.changed-files.outputs.any_changed == 'true'
        run: npm install -g prettier@3
      
      - name: Check formatting with Prettier
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Checking formatting for changed files..."
          echo "${{ steps.changed-files.outputs.all_changed_files }}"
          if [ -n "${{ steps.changed-files.outputs.all_changed_files }}" ]; then
            prettier --check ${{ steps.changed-files.outputs.all_changed_files }}
          fi
      
      - name: Lint frontend files
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: ./frontend
        run: |
          FRONTEND_FILES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep '^frontend/' | sed 's|^frontend/||' | tr '\n' ' ')
          if [ -n "$FRONTEND_FILES" ]; then
            echo "Linting frontend files: $FRONTEND_FILES"
            npm run lint -- $FRONTEND_FILES
          else
            echo "No frontend files to lint"
          fi
      
      - name: Lint supabase-backend files
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: ./supabase-backend
        run: |
          BACKEND_FILES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep '^supabase-backend/' | sed 's|^supabase-backend/||' | tr '\n' ' ')
          if [ -n "$BACKEND_FILES" ]; then
            echo "Supabase backend files changed: $BACKEND_FILES"
            echo "Supabase backend linting will be added once eslint is configured"
          else
            echo "No supabase backend files to lint"
          fi
      
      - name: Setup Python
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Python dependencies
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: ./python-backend
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Check Python code formatting with Black
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: ./python-backend
        run: |
          PYTHON_FILES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep '^python-backend/.*\.py$' | tr '\n' ' ')
          if [ -n "$PYTHON_FILES" ]; then
            echo "Checking Python formatting: $PYTHON_FILES"
            black --check --diff $PYTHON_FILES
          else
            echo "No Python files to check formatting"
          fi
      
      - name: Lint Python files with flake8
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: ./python-backend
        run: |
          PYTHON_FILES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep '^python-backend/.*\.py$' | tr '\n' ' ')
          if [ -n "$PYTHON_FILES" ]; then
            echo "Linting Python files: $PYTHON_FILES"
            flake8 $PYTHON_FILES
          else
            echo "No Python files to lint"
          fi
      
      - name: Comment on PR
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå Linting or formatting checks failed. Please run `npm run lint` and `prettier --write` on your changed files.'
            })

