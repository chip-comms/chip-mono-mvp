name: Frontend - Lint and Format Check

permissions:
  contents: read
  issues: write
  pull-requests: write

on:
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-lint-pr.yml'

jobs:
  frontend-quality-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            frontend/**/*.ts
            frontend/**/*.tsx
            frontend/**/*.js
            frontend/**/*.jsx
            frontend/**/*.json
            frontend/**/*.md
            frontend/**/*.css
            frontend/**/*.scss
      
      - name: Install dependencies (workspace-aware)
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Installing all workspace dependencies..."
          npm install
      
      - name: Check formatting with Prettier
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Checking formatting for changed files..."
          
          # Get prettier-compatible files from frontend only
          PRETTIER_FILES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -E '^frontend/.*\.(ts|tsx|js|jsx|json|css|scss|md)$' | tr '\n' ' ')
          
          if [ -n "$PRETTIER_FILES" ]; then
            echo "Checking formatting for: $PRETTIER_FILES"
            npx prettier --check $PRETTIER_FILES
          else
            echo "No files to format"
          fi
      
      - name: Lint frontend files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          # Check if frontend files changed
          FRONTEND_FILES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep '^frontend/' | tr '\n' ' ')
          if [ -n "$FRONTEND_FILES" ]; then
            echo "Linting frontend files..."
            cd frontend
            npx eslint . --ext .ts,.tsx,.js,.jsx
          else
            echo "No frontend files to lint"
          fi
      
      - name: Build frontend
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          # Check if frontend files changed
          FRONTEND_FILES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep '^frontend/' | tr '\n' ' ')
          if [ -n "$FRONTEND_FILES" ]; then
            echo "Building frontend to verify no build errors..."
            npm run build:frontend
          else
            echo "No frontend changes, skipping build"
          fi
      
      - name: Comment on PR if checks fail
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå **Frontend code quality checks failed**\n\nPlease fix the following issues:\n- Run `npm run format:frontend` to fix formatting\n- Run `npm run lint:frontend` to check for linting errors\n- Ensure your frontend builds successfully with `npm run build:frontend`\n\nThen push your changes to update this PR.'
            })

