name: Supabase Backend - Lint and Format Check

permissions:
  contents: read
  issues: write
  pull-requests: write

on:
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'supabase/**'
      - '.github/workflows/supabase-lint-pr.yml'

jobs:
  supabase-quality-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            supabase/package-lock.json
      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            supabase/**/*.ts
            supabase/**/*.js
            supabase/**/*.json
            supabase/**/*.md
      
      - name: Skip if no changes
        if: steps.changed-files.outputs.any_changed != 'true'
        run: |
          echo "No supabase files changed, skipping workflow"
          exit 0
      
      - name: Install dependencies (workspace-aware)
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Installing all workspace dependencies..."
          npm install
      
      - name: Check formatting with Prettier
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Checking formatting for changed files..."
          
          # Get prettier-compatible files from supabase only
          PRETTIER_FILES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -E '^supabase/.*\.(ts|js|json|md)$' | tr '\n' ' ')
          
          if [ -n "$PRETTIER_FILES" ]; then
            echo "Checking formatting for: $PRETTIER_FILES"
            npx prettier --check $PRETTIER_FILES
          else
            echo "No files to format"
          fi
      
      - name: Lint supabase files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          # Check if supabase files changed
          BACKEND_FILES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep '^supabase/' | tr '\n' ' ')
          if [ -n "$BACKEND_FILES" ]; then
            echo "Linting supabase files..."
            cd supabase
            npx eslint .
          else
            echo "No supabase files to lint"
          fi
      
      - name: TypeScript type check
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          # Check if TypeScript files changed
          TS_FILES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -E '^supabase/.*\.ts$' | tr '\n' ' ')
          if [ -n "$TS_FILES" ]; then
            echo "Running TypeScript type check..."
            cd supabase
            npx tsc --noEmit
          else
            echo "No TypeScript files to check"
          fi
      
      - name: Comment on PR if checks fail
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå **Supabase Backend code quality checks failed**\n\nPlease fix the following issues:\n- Run `npm run format:backend` to fix formatting\n- Run `npm run lint:backend` to check for linting errors\n- Ensure TypeScript compilation succeeds\n\nThen push your changes to update this PR.'
            })